import grails.util.Environment

buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.14.6"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.14.8"
    }
}

version "0.1"
group "segurancaalimentar"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"asset-pipeline"
apply plugin:"org.grails.grails-gsp"

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.1.5.Final"
//    compile "org.hibernate:hibernate-ehcache:5.1.5.Final"
    compile "org.grails.plugins:gsp"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
//    runtime "org.glassfish.web:el-impl:2.1.2-b03"
    compile "org.apache.tomcat:tomcat-jdbc"
    compile "com.bertramlabs.plugins:asset-pipeline-grails:2.14.6"
    compile "com.bertramlabs.plugins:less-asset-pipeline:2.14.6"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails:grails-web-testing-support"

    runtime "org.postgresql:postgresql:9.3-1101-jdbc41"
    compile 'com.google.api-client:google-api-client:1.25.0'
    compile 'com.google.http-client:google-http-client-jackson:1.25.0'

    //XDocReport (geracao de relatorio a partir de templates docx ou odt)
    compile "fr.opensagres.xdocreport:fr.opensagres.xdocreport.core:1.0.4"
    compile "fr.opensagres.xdocreport:fr.opensagres.xdocreport.document:1.0.4"
    compile "fr.opensagres.xdocreport:fr.opensagres.xdocreport.template:1.0.4"
//        compile "fr.opensagres.xdocreport:fr.opensagres.xdocreport.converter:1.0.4"
    compile "fr.opensagres.xdocreport:fr.opensagres.xdocreport.document.docx:1.0.4" //suporte a .docx
    compile "fr.opensagres.xdocreport:fr.opensagres.xdocreport.document.odt:1.0.4" //suporte a .odt
    compile "fr.opensagres.xdocreport:fr.opensagres.xdocreport.template.velocity:1.0.4" //suporte a velocity
//        compile "fr.opensagres.xdocreport:fr.opensagres.xdocreport.converter.docx.xwpf:1.0.4" //conversao PDF e XHTML
//        compile "fr.opensagres.xdocreport:fr.opensagres.xdocreport.converter.docx.docx4j:1.0.4" //conversao PDF e XHTML
//        compile "fr.opensagres.xdocreport:fr.opensagres.xdocreport.converter.fop.docx:1.0.4" //conversao PDF e XHTML
//        compile "fr.opensagres.xdocreport:org.apache.poi.xwpf.converter.pdf:1.0.4" //conversao PDF e XHTML

//    compile 'org.grails.plugins:spring-security-core:3.2.3'
//    compile 'org.grails.plugins:spring-security-oauth2:1.1.0'
//    compile 'org.grails.plugins:spring-security-oauth2-google:1.1.0'

    //   DEPENDENCIAS DO OPENCSV 4.4 (DECLARADAS EXPLICITAMENTE PARA INCORPORAR O MESMO AO CODIGO DO PROJETO)
//    compile "com.opencsv:opencsv:4.4"
    compile "commons-beanutils:commons-beanutils:1.9.3"
    compile "org.apache.commons:commons-collections4:4.2"
    compile "org.apache.commons:commons-lang3:3.8.1"
    compile "org.apache.commons:commons-text:1.3"

    if (grails.util.Environment.current == grails.util.Environment.DEVELOPMENT ) {
        System.out.println("dependencias em desenvolvimento...")
//        compile 'org.grails.plugins:p6spy-ui:3.0.0'

//Biblioteca original p6spy:
         compile group: 'p6spy', name: 'p6spy', version: '3.8.1'
//         compile "p6spy:p6spy"
    }

    compile "fr.opensagres.xdocreport:fr.opensagres.xdocreport.converter.docx.xwpf:2.0.1"
    compile "fr.opensagres.xdocreport:fr.opensagres.xdocreport.converter.odt.odfdom:2.0.1"

}

bootRun {
    systemProperties = System.properties
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}


assets {
    minifyJs = true
    minifyCss = true
    excludes = ['**/*.less']
    includes = ['application.less']
    configOptions = [
      less: [
        compiler: 'less4j' // or standard
      ]
    ]
}


assets {
    minifyJs = true
    minifyCss = true
}

sourceSets {
    main {
        java {
            srcDirs 'src/opencsv/java'
        }
        resources {
            srcDirs 'src/opencsv/resources'
        }
    }
}